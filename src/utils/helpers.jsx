// utils/helpers.jsx 

/**
 * Busca o nome de uma medica√ß√£o na lista de medica√ß√µes pelo seu ID.
 * @param {string} medicationId - O ID da medica√ß√£o (string ObjectId).
 * @param {Array<Object>} medicationsList - Lista de objetos de medica√ß√£o (vindo da API).
 * @returns {string} O nome da medica√ß√£o ou 'ID Inv√°lido'.
 */
export const getMedicationName = (medicationId, medicationsList = []) => {
    // Retorna um nome padr√£o se o ID estiver ausente
    if (!medicationId) return 'Medica√ß√£o Ausente';
    
    // CORRE√á√ÉO: Compara IDs como strings (m.id √© o ID normalizado do App.jsx)
    const medication = medicationsList.find(
        (m) => m.id === medicationId 
    );
    
    // Retorna o nome da medica√ß√£o se for encontrado, sen√£o retorna o erro de exibi√ß√£o
    return medication ? medication.name : 'ID Inv√°lido';
};

/**
 * Retorna o nome de um paciente dado seu ID.
 * @param {string} patientId - O ID do paciente (string ObjectId).
 * @param {Array<Object>} patientsList - Lista de pacientes.
 * @returns {string} O nome do paciente ou 'Paciente Desconhecido'.
 */
export const getPatientName = (patientId, patientsList = []) => {
    if (!patientId) return 'Paciente Ausente';

    const patient = patientsList.find(
        (p) => p.id === patientId
    );
    
    return patient ? patient.name : 'Paciente Desconhecido';
};

/**
 * üö® FUN√á√ÉO ADICIONADA: Formata o nome do usu√°rio (Placeholder)
 * @param {string} fullName - Nome completo do usu√°rio.
 * @returns {string} O nome formatado (ex: apenas o primeiro nome).
 */
export const formatUserName = (fullName) => {
    if (!fullName) return 'Usu√°rio';
    
    // Implemente a l√≥gica real de formata√ß√£o aqui.
    // Exemplo: Retorna apenas o primeiro nome.
    return fullName.split(' ')[0];
};

// Se voc√™ tiver outras fun√ß√µes, exporte-as aqui.